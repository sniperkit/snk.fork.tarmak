# Sniperkit-Bot
# - Status: analyzed

# run test on golang code
#
test::tarmak::golang:
  stage: test
  tags:
  - docker
  image: golang:1.9.5
  script:
  - rm -rf /go/src/github.com/jetstack
  - mkdir -p /go/src/github.com/jetstack
  - mv ${CI_PROJECT_DIR} /go/src/github.com/jetstack
  - cd /go/src/github.com/sniperkit/snk.fork.tarmak
  - make all
  - mv /go/src/github.com/sniperkit/snk.fork.tarmak ${CI_PROJECT_DIR}

# generate sphinx documentation
generate::docs:
  stage: test
  tags:
  - docker
  image: python:3
  script:
  - apt-get update
  - apt-get install -y python-enchant wbritish
  - pip install virtualenv
  - make -C docs spelling
  - make -C docs linkcheck
  - make -C docs html
  artifacts:
    paths:
    - docs/_build/html
    expire_in: 4 weeks

release::tarmak::puppet_publish_modules:
  stage: release
  tags:
  - docker
  only:
  - tags
  script:
  - cd ${CI_PROJECT_DIR}/puppet
  - bundle install --path /cache
  - echo "${PUPPETFORGE_DATA}" > ~/.puppetforge.yml && chmod 600 ~/.puppetforge.yml
  - bundle exec rake publish_modules

release::tarmak::golang:
  stage: release
  tags:
  - docker
  image: golang:1.9.5
  only:
  - tags
  script:
  - umask 0077
  - mkdir -p /root/.gnupg
  - echo "${GPG_PRIVATE_KEY}" | base64 -d > /root/.gnupg/secring.gpg
  - rm -rf /go/src/github.com/jetstack
  - mkdir -p /go/src/github.com/jetstack
  - mv ${CI_PROJECT_DIR} /go/src/github.com/jetstack
  - cd /go/src/github.com/sniperkit/snk.fork.tarmak
  - make all
  - export PATH="/go/src/github.com/sniperkit/snk.fork.tarmak/bin:${PATH}" && goreleaser
  - mv /go/src/github.com/sniperkit/snk.fork.tarmak ${CI_PROJECT_DIR}

stages:
- test
- acceptance
- release
